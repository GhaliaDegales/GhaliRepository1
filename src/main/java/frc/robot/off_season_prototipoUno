// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

package frc.robot;

import edu.wpi.first.networktables.StringArrayEntry;
import edu.wpi.first.util.sendable.SendableRegistry;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.TimedRobot;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.motorcontrol.PWMSparkMax;

import java.io.StringReader;

import javax.lang.model.util.ElementScanner14;

import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;
import com.revrobotics.CANSparkMax;
import com.revrobotics.RelativeEncoder;
import com.revrobotics.CANSparkLowLevel.MotorType;

import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DigitalOutput;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.AnalogInput;
import edu.wpi.first.wpilibj.SerialPort;
import edu.wpi.first.wpilibj.SerialPort.Port;

import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DigitalOutput;

/**
 * This is a demo program showing the use of the fucking DifferentialDrive class, specifically it contains
 * the code necessary to operate a robot with tank drive.
 */
public class Robot extends TimedRobot {
  private Joystick joy1,joy2;
  

 //SENSORES
 private final DigitalInput Limit = new DigitalInput(0);
 private final DigitalInput Salida = new DigitalInput(2);
 
 //MOTORES CHASIS
  WPI_TalonSRX m_leftMotor =new WPI_TalonSRX(1);
  WPI_TalonSRX m_leftMotorb =new WPI_TalonSRX(2);
  WPI_TalonSRX m_rightMotor =new WPI_TalonSRX(3);
  WPI_TalonSRX m_rightMotorb =new WPI_TalonSRX(4);
  //MOTOR BRAZO
  CANSparkMax brazo = new CANSparkMax (9,MotorType.kBrushless);
  //MOTORES INTAKE
  WPI_VictorSPX intake =new WPI_VictorSPX(7);
  WPI_VictorSPX intakeb =new WPI_VictorSPX(8);
  //MOTORES DISPARADOR
  WPI_VictorSPX dispara =new WPI_VictorSPX(5);
  WPI_VictorSPX disparab =new WPI_VictorSPX(6);

   // variables
  private static int izq=1;
  private static int der=6;

  private static int levanta=1;

  private static int recoge=7;
  private static int shoot=8;
  private static int escupe=4;

  private static int amp=1;
  private RelativeEncoder Ebrazo = brazo.getEncoder();
  private static double ERbrazo;
  

  
  @Override
  public void robotInit() {
   
    m_leftMotor.setInverted(true);
    m_leftMotorb.setInverted(true); 
    brazo.setInverted(true);
  
    joy1 = new Joystick(0);
    joy2 = new Joystick(1);
  }

  @Override
  public void teleopPeriodic() {
    ERbrazo = Ebrazo.getPosition();
    if (Limit.get()==false){
    Ebrazo.setPosition(0);
    //System.out.println("REINICIO");}

    if (Salida.get()==true){
    System.out.println("TRUE");
    } else {
    System.out.println("FALSE");
    }

  if (joy2.getRawButton(1)){
    if (ERbrazo<70){
          brazo.set(.35);
          //System.out.println("SUBIENDO A AMP");
      } else if (ERbrazo<75 && ERbrazo>60){
          intake.set(1);
          //System.out.println("ESCUPIENDO NOTA");
        }        
    }else if (joy2.getRawAxis(levanta)<0.5 && Limit.get()==true){
          brazo.set(joy2.getRawAxis(levanta)*.25);
          //System.out.println("BRAZO BAJANDO");
        } else if (joy2.getRawAxis(levanta)>0 && ERbrazo<70){
          brazo.set(joy2.getRawAxis(levanta)*.35);
          //System.out.println("BRAZO SUBIENDO");
        } else {
          brazo.set(0);
          //System.out.println("BRAZO APAGADO");
        }
      
   m_leftMotor.set(joy1.getRawAxis(1)*3/4);
   m_leftMotorb.set(joy1.getRawAxis(1)*3/4);
   m_rightMotor.set(joy1.getRawAxis(5)*3/4);
   m_rightMotorb.set(joy1.getRawAxis(5)*3/4);
   
   if (joy2.getRawButton(escupe)){
    dispara.set(-.5);
    disparab.set(-.5);
    intake.set(-.5);
    intakeb.set(-.5);
   } else{
   if (joy2.getRawButton(5)){
    dispara.set(.9);
    disparab.set(.9);
   } else {
    dispara.set(0);
    disparab.set(0);
   }

   if (joy2.getRawButton(6)){
    intake.set(.9);
    intakeb.set(.9);
   m_leftMotor.set(.20);
   m_leftMotorb.set(.20);
   m_rightMotor.set(.20);
   m_rightMotorb.set(.20);
   } else {
    intake.set(0);
    intakeb.set(0);
   }

   
   

   
  }
  
   
}
}}

